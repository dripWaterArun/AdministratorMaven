<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>root-plugin</artifactId>
        <groupId>org.example</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <modelVersion>4.0.0</modelVersion>
    <artifactId>plugin-service-doc</artifactId>

    <properties>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
    </properties>

    <dependencies>

        <!--配置中心-->
        <dependency>
            <groupId>org.example</groupId>
            <artifactId>common-config</artifactId>
            <version>1.0-SNAPSHOT</version>
            <optional>true</optional>
            <!-- 排除的依赖 -->
            <exclusions>
                <!--共通 api-->
                <exclusion>
                    <groupId>org.example</groupId>
                    <artifactId>module-api-common</artifactId>
                </exclusion>
                <!--工具类 util -->
                <exclusion>
                    <groupId>org.example</groupId>
                    <artifactId>common-util</artifactId>
                </exclusion>
                <!-- 日志 -->
                <exclusion>
                    <groupId>org.example</groupId>
                    <artifactId>common-log</artifactId>
                </exclusion>
                <!--springboot 参数校验-->
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-validation</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Knife4jAggregation 聚合文档 -->
        <dependency>
            <groupId>com.github.xiaoymin</groupId>
            <artifactId>knife4j-aggregation-spring-boot-starter</artifactId>
            <optional>true</optional>
        </dependency>

        <!-- knife4j doc 文档 -->
        <dependency>
            <groupId>org.example</groupId>
            <artifactId>common-doc</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <!--打包部署-->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>
                            <groupId>org.springframework.boot</groupId>
                            <artifactId>spring-boot-configuration-processor</artifactId>
                        </exclude>
                    </excludes>
                    <fork>true</fork>
                    <addResources>true</addResources>
                </configuration>
            </plugin>
            <!--打包部署-->

            <!-- 打出项目依赖的第三方包，放在lib下面(**相当于拷贝项目的jar包**) -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>target/lib</outputDirectory>
                            <excludeTransitive>false</excludeTransitive>
                            <stripVersion>false</stripVersion>
                            <includeScope>runtime</includeScope>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>

        <!-- 如果不添加此节点mybatis的mapper.xml文件都会被漏掉。 -->
        <resources>
            <!--配置可以读取 pom 文件变量-->
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**.*</include>
                    <include>**/**.*</include>
                </includes>
                <!--开启过滤，用指定的参数替换directory下的文件中的参数-->
                <filtering>true</filtering>
            </resource>
        </resources>

    </build>

</project>
